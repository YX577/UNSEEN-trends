theme(axis.title.x=element_blank())
ggarrange(p_trend_wc, p_trend_sv,
labels = c("A", "B"),
ncol = 2, nrow = 1)
p_trend_wc=
ggplot()+
geom_point(aes(x = year_vector,y = extremes_wc),size=2,alpha=0.051)+
# scale_size_manual(values = seq(0.1,3,length.out = 3499)) +
geom_point(aes(x=1981:2015,y =obs),col='blue',shape=4,size=2,stroke=1.5)+
geom_line(aes(x=1981:2015,y = ci_wc_biascor[,2]),col='orange')+
geom_ribbon(aes(x=1981:2015,ymin = ci_wc_biascor[,1],ymax=ci_wc_biascor[,3]),fill='orange',alpha=0.2)+
geom_line(aes(x=1981:2015,y = ci_obs[,2]),col='blue')+
geom_ribbon(aes(x=1981:2015,ymin = ci_obs[,1],ymax=ci_obs[,3]),fill='blue',alpha=0.2)+
theme_classic()+
ylab('Three-day precipitation (mm)')+
theme(axis.title.x=element_blank())
ggarrange(p_trend_wc, p_trend_sv,
labels = c("A", "B"),
ncol = 2, nrow = 1)
p_sv=ggplot(data = rvs_SV,aes(x=rperiods))+
geom_line(aes(y = S5_1981,colour="SEAS5 1981"),col=1)+
geom_ribbon(aes(ymin=S5_1981_l,ymax=S5_1981_h,fill="SEAS5 1981"),alpha=0.5)+
geom_line(aes(y = S5_2015,colour="SEAS5 2015"),col=2)+
geom_ribbon(aes(ymin=S5_2015_l,ymax=S5_2015_h,fill="SEAS5 2015"), alpha=0.5)+
scale_x_continuous(trans='log10')+
theme_classic()+
scale_fill_manual(name="Years",values=cols) +
theme(legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.title = element_blank(),
axis.title.y=element_blank())+
xlab('Return period')+
ylab('Three-day precipitation (mm)')
ggarrange(p_wc, p_sv,
labels = c("A", "B"),
ncol = 2, nrow = 1)
ggarrange(p_wc, p_sv,
labels = c("A", "B"),
ncol = 1, nrow = 2)
ggarrange(p_wc, p_sv,
labels = c("A", "B"),
ncol = 2, nrow = 1)
# dir='//home/timok/timok/SALIENSEAS/SEAS5/ensex'
# plotdir=paste0(dir,'/statistics/multiday/plots')
# dir='/home/timok/ensex'
# plotdir='/home/timok/Documents/ensex/R/graphs'
dir='C:/Users/Timo/Documents/GitHub/EnsEx/Data'
source('Load_data.R')
require(plyr)
names(dimnames(Extremes_WC)) <- c('Member', 'Leadtime', 'Year')
df=adply(Extremes_WC, 1:3)
p= ggplot(df, aes(x=Year, y=V1, color=Leadtime, shape=Leadtime)) +
theme_classic()
p1= p +   geom_boxplot() +
geom_hline(yintercept=quantile(Extremes_WC,0.8)) +
scale_color_brewer(palette="Dark2") +
scale_x_discrete(breaks=seq(1981,2016,5)) +
labs(x = NULL, y = 'Precipitation')
p1
# ggsave(p1, filename = paste0(plotdir,"/ggplot.png"), dpi = 100, type = "cairo")
#calculate the forecast prob
Quantile=0.8
probs_by_ld_yr <- df %>% group_by(Leadtime, Year) %>% tally(V1>quantile(df$V1,Quantile)) %>% mutate(probs = n / 25)
#and plot
p= ggplot(probs_by_ld_yr, aes(x=Year, y=probs, color=Leadtime, shape=Leadtime,group=Leadtime)) +
theme_classic()
p1= p +
geom_point() +
geom_line() +
scale_color_brewer(palette="Dark2") +
scale_x_discrete(breaks=seq(1981,2016,5)) +
labs(x = NULL, y = 'Probability of Precipitation > 5yr')
p1
obs=Extremes_obs[as.character(1981:2015)]
count_obs=as.integer(obs>quantile(obs,Quantile))
plot(1981:2015,count_obs)
#Select the predictor
pred= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='2',4])) #Just select lead time 2, ugly coding :(
#We use the Verification package for the reliability plot, please give any suggestions on other methods!
require(verification)
A<- verify(count_obs, pred, frcst.type = "prob", obs.type = "binary")
require(verification)
install.packages('verification')
require(verification)
A<- verify(count_obs, pred, frcst.type = "prob", obs.type = "binary")
reliability.plot(A, titl = "Lead time 2")
A
reliability.plot(A, titl = "Lead time 2")
reliability.plot
reliability.plot
?reliability.plot
reliability.plot(A, titl = "Lead time 2")
plot(x = A$y.i,y = A$obar.i)
#Select the predictor
pred= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='2',4])) #Just select lead time 2, ugly coding :(
#We use the Verification package for the reliability plot, please give any suggestions on other methods!
require(verification)
A<- verify(count_obs, pred, frcst.type = "prob", obs.type = "binary")
reliability.plot(A, titl = "Lead time 2")
plot(x = A$y.i,y = A$obar.i)
A<- verify(count_obs, pred, p=0.8,frcst.type = "prob", obs.type = "binary")
reliability.plot(A, titl = "Lead time 2")
#Select the predictor
pred= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='2',4])) #Just select lead time 2, ugly coding :(
#We use the Verification package for the reliability plot, please give any suggestions on other methods!
require(verification)
A<- verify(count_obs, pred, p=0.8,frcst.type = "prob", obs.type = "binary")
reliability.plot(A, titl = "Lead time 2")
plot(x = A$y.i,y = A$obar.i)
lm(formula = obar.i~y.i,data = A)
df_A=data.frame('x'=A$y.i,'y'=obar.i)
df_A=data.frame('x'=A$y.i,'y'=A$obar.i)
df_A
plot(x = A$y.i,y = A$obar.i)
df_A=data.frame('x'=A$y.i,'y'=A$obar.i,'y_forecast'=A$prob.y)
df_A
reliability.plot(A, titl = "Lead time 2")
reliability.plot(x = A$y.i,obar.i = A$obar.i,prob.y = A$prob.y, titl = "Lead time 2")
pred
probs_by_ld_yr
probs_by_ld_yr['Leadtime']=='2',4]
probs_by_ld_yr[,'Leadtime']=='2',4]
probs_by_ld_yr[,'Leadtime']
pred= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='2',4])) #Just select lead time 2, ugly coding :(
reliability.plot
reliability
reliability.plot()
df_A
getAnywhere(reliability.plot)
getMethod("reliability", "plot")
getMethod("verification", "reliability.plot")
getAnywhere(reliability.plot)
verification:::reliability.plot()
verification:::reliability.plot
reliability.plot
edit(getAnywhere('rfcv'), file='source_rfcv.r')
edit(getAnywhere('reliability.plot'), file='source_rfcv.r')
showMethods(reliability.plot)
reliability.plot
Methods(reliability.plot)
methods(reliability.plot)
?methods(reliability.plot)
methods(reliability.plot)
methods(class=plot)
methods(class='plot')
methods(reliability.plot)
reliability.plot.default
df_A
verify
A
df_A
df_A=data.frame('y.i'=A$y.i,'obar.i'=A$obar.i,'prob.y'=A$prob.y)
df_A
reliability.plot.default
df_A=data.frame('y.i'=A$y.i,'obar.i'=A$obar.i,'prob.y'=A$prob.y)
obar.i <- as.matrix(df_A$obar.i)
obar.i
m <- dim(obar.i)[2]
m
dim(obar.i)
plot(x, obar.i[, 1], col = 2, lwd = 2, type = "n",
xlim = c(0, 1), ylim = c(0, 1), xlab = expression(paste("Forecast probability, ",
y[i])), ylab = expression(paste("Observed relative frequency, ",
bar(o)[1])))
plot(df_A$y.i, obar.i[, 1], col = 2, lwd = 2, type = "n",
xlim = c(0, 1), ylim = c(0, 1), xlab = expression(paste("Forecast probability, ",
y[i])), ylab = expression(paste("Observed relative frequency, ",
bar(o)[1])))
for (i in 1:m) {
points(x, obar.i[, i], type = "b", col = 1 + i,
lty = i, lwd = 2)
}
x=df_A$y.i
for (i in 1:m) {
points(x, obar.i[, i], type = "b", col = 1 + i,
lty = i, lwd = 2)
}
plot(df_A$y.i, obar.i[, 1], col = 2, lwd = 2, type = "n",
xlim = c(0, 1), ylim = c(0, 1), xlab = expression(paste("Forecast probability, ",
y[i])), ylab = expression(paste("Observed relative frequency, ",
bar(o)[1])))
for (i in 1:m) {
points(x, obar.i[, i], type = "b", col = 1 + i,
lty = i, lwd = 2)
}
plot(df_A$y.i, obar.i[, 1], col = 2, lwd = 2, type = "n",
xlim = c(0, 1), ylim = c(0, 1), xlab = expression(paste("Forecast probability, ",
y[i])), ylab = expression(paste("Observed relative frequency, ",
bar(o)[1])))
points(x, obar.i[, i], type = "b", col = 1 + i,
lty = i, lwd = 2)
abline(0, 1)
plot(df_A$y.i, obar.i[, 1], col = 2, lwd = 2, type = "n",
xlim = c(0, 1), ylim = c(0, 1), xlab = expression(paste("Forecast probability, ",
y[i])), ylab = expression(paste("Observed relative frequency, ",
bar(o)[1])))
1:m
for (i in 1:m) {
points(x, obar.i[, i], type = "b", col = 1 + i,
lty = i, lwd = 2)
}
par
par("plt")
prob.y[, 1]
df_A
df_A
lm(formula = obar.i~y.i,data = df_A,weights = prob.y)
ggplot(data=df_A,aes(x = y.i,y=obar.i))+
geom_points()
ggplot(data=df_A,aes(x = y.i,y=obar.i))+
geom_point()
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=obar.i))+
geom_point()
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()
plot(df_A$y.i, obar.i[, 1], col = 2, lwd = 2, type = "n",
xlim = c(0, 1), ylim = c(0, 1), xlab = expression(paste("Forecast probability, ",
y[i])), ylab = expression(paste("Observed relative frequency, ",
bar(o)[1])))
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
xlim(0,1)+
ylim(0,1)
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
geom_smooth(method = "lm")+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
geom_smooth(method = "lm", mapping = aes(weight = prob.y))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
geom_smooth(method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
geom_smooth(method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(aes(x=c(0,1),y=c(0,1)))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
df_A
ggplot(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_point()+
geom_smooth(method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme(legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.title = element_blank())+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme(legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.title = element_blank())+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme(legend.position = c(.95, .05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
legend.title = element_blank())+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme(legend.position = c(.95, .05))+
# legend.justification = c("right", "bottom"),
# legend.box.just = "right",
# legend.title = element_blank())+
theme_classic()
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.95, .05))+
# legend.justification = c("right", "bottom"),
# legend.box.just = "right",
# legend.title = element_blank())+
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.95, .05))
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.95, .05))
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .1))
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
pred2= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='2',4])) #Just select lead time 2, ugly coding :(
pred3= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='3',4])) #Just select lead time 2, ugly coding :(
pred4= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='4',4])) #Just select lead time 2, ugly coding :(
pred5= as.vector(unlist(probs_by_ld_yr[probs_by_ld_yr[,'Leadtime']=='5',4])) #Just select lead time 2, ugly coding :(
cbind(pred2,pred3,pred4,pred5)
pred=cbind(pred2,pred3,pred4,pred5)
A<- verify(count_obs, pred, p=0.8,frcst.type = "prob", obs.type = "binary")
A
pred
obs=rbind(count_obs,pred2,pred3,pred4,pred5)
obs
A<- verify(obs, p=0.8,frcst.type = "prob", obs.type = "binary")
pred=cbind(pred2,pred3,pred4,pred5)
pred
A2<- verify(count_obs, pred2, p=0.8,frcst.type = "prob", obs.type = "binary")
A3<- verify(count_obs, pred3, p=0.8,frcst.type = "prob", obs.type = "binary")
A5<- verify(count_obs, pred5, p=0.8,frcst.type = "prob", obs.type = "binary")
reliability.plot(x = A$y.i,obar.i = A$obar.i,prob.y = A$prob.y, titl = "Lead time 2")
A2
df_A=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y)
df_A
df_A3=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y)
df_A3
df_A=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(2,10))
df_A
df_A3=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(3,10))
df_A3
df_A4=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(2,10))
df_A5=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(3,10))
df_A2=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(2,10))
df_A3=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(3,10))
df_A4=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(2,10))
df_A5=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(3,10))
df_A=rbind(df_A2,df_A3,df_A4,df_A5)
df_A
df_A2=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(2,10))
df_A3=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(3,10))
df_A4=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(4,10))
df_A5=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(5,10))
df_A=rbind(df_A2,df_A3,df_A4,df_A5)
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=Leadtime))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
df_A
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=Leadtime))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
df_A3
df_A4
df_A5
df_A3
df_A4=data.frame('y.i'=A4$y.i,'obar.i'=A4$obar.i,'prob.y'=A4$prob.y,'Leadtime'=rep(4,10))
df_A=rbind(df_A2,df_A3,df_A4,df_A5)
df_A4=data.frame('y.i'=A4$y.i,'obar.i'=A4$obar.i,'prob.y'=A4$prob.y,'Leadtime'=rep(4,10))
A4<- verify(count_obs, pred4, p=0.8,frcst.type = "prob", obs.type = "binary")
A5<- verify(count_obs, pred5, p=0.8,frcst.type = "prob", obs.type = "binary")
df_A2=data.frame('y.i'=A2$y.i,'obar.i'=A2$obar.i,'prob.y'=A2$prob.y,'Leadtime'=rep(2,10))
df_A3=data.frame('y.i'=A3$y.i,'obar.i'=A3$obar.i,'prob.y'=A3$prob.y,'Leadtime'=rep(3,10))
df_A4=data.frame('y.i'=A4$y.i,'obar.i'=A4$obar.i,'prob.y'=A4$prob.y,'Leadtime'=rep(4,10))
df_A5=data.frame('y.i'=A5$y.i,'obar.i'=A5$obar.i,'prob.y'=A5$prob.y,'Leadtime'=rep(5,10))
df_A=rbind(df_A2,df_A3,df_A4,df_A5)
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=Leadtime))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=factor(Leadtime)))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
df_A4
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=factor(Leadtime)))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
df %>% group_by(Year)
df %>% group_by(Year) %>% tally(V1>quantile(df$V1,Quantile))
df %>% group_by(Year) %>% tally(V1>quantile(df$V1,Quantile)) %>% mutate(probs = n / 100)
probs_yr <- df %>% group_by(Year) %>% tally(V1>quantile(df$V1,Quantile)) %>% mutate(probs = n / 100)
probs_yr
pred_all=probs_yr$probs
pred4
pred_all
A_all<- verify(count_obs, pred_all, p=0.8,frcst.type = "prob", obs.type = "binary")
df_A_all=data.frame('y.i'=A_all$y.i,'obar.i'=A_all$obar.i,'prob.y'=A_all$prob.y)
df_A=rbind(df_A2,df_A3,df_A4,df_A5)
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=factor(Leadtime)))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=factor(Leadtime)))+
geom_point(data=df_A_all,aes(x = y.i,y=obar.i,size=prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
df_A_all
ggplot()+
geom_point(data=df_A,aes(x = y.i,y=obar.i,size=prob.y,color=factor(Leadtime)))+
geom_smooth(data=df_A,method = "lm", mapping = aes(x = y.i,y=obar.i,weight = prob.y,color=factor(Leadtime)))+
geom_point(data=df_A_all,aes(x = y.i,y=obar.i,size=prob.y))+
geom_line(data=df_A,aes(x=y.i,y=y.i))+
xlim(0,1)+
ylim(0,1)+
theme_classic()+
theme(legend.position = c(.9, .2))
